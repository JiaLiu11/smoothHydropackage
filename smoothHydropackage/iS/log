diff --git a/EBE-Node/iS/EOS/EOS_particletable.dat b/EBE-Node/iS/EOS/EOS_particletable.dat
old mode 100644
new mode 100755
diff --git a/EBE-Node/iS/EOS/chosen_particles.dat b/EBE-Node/iS/EOS/chosen_particles.dat
old mode 100644
new mode 100755
index 58c9bdf..552fbc3
--- a/EBE-Node/iS/EOS/chosen_particles.dat
+++ b/EBE-Node/iS/EOS/chosen_particles.dat
@@ -1 +1,319 @@
-111
+      211 
+      111 
+     -211 
+      321 
+     -321 
+      311 
+     -311 
+      221 
+      213 
+      113 
+     -213 
+      223 
+      323 
+     -323 
+      313 
+     -313 
+     2212 
+    -2212 
+     2112 
+    -2112 
+      331 
+  9010221 
+  9000211 
+  9000111 
+ -9000211 
+      333 
+     3122 
+    -3122 
+    10223 
+     3222 
+    -3222 
+     3212 
+    -3212 
+     3112 
+    -3112 
+    10213 
+    10113 
+   -10213 
+    20213 
+    20113 
+   -20213 
+     2224 
+    -2224 
+     2214 
+    -2214 
+     2114 
+    -2114 
+     1114 
+    -1114 
+    10323 
+   -10323 
+    10313 
+   -10313 
+      225 
+    20223 
+   100221 
+   100211 
+   100111 
+  -100211 
+     3322 
+    -3322 
+     3312 
+    -3312 
+      215 
+      115 
+     -215 
+  9000213 
+  9000113 
+ -9000213 
+     3224 
+    -3224 
+     3214 
+    -3214 
+     3114 
+    -3114 
+    10221 
+    20323 
+   -20323 
+    20313 
+   -20313 
+    13122 
+   -13122 
+   100323 
+  -100323 
+   100313 
+  -100313 
+  9020221 
+    10321 
+   -10321 
+    10311 
+   -10311 
+   100223 
+    20333 
+      325 
+     -325 
+      315 
+     -315 
+    12212 
+   -12212 
+    12112 
+   -12112 
+   100213 
+   100113 
+  -100213 
+    10211 
+    10111 
+   -10211 
+   100331 
+  9030221 
+     3124 
+    -3124 
+     2124 
+    -2124 
+     1214 
+    -1214 
+      335 
+     3324 
+    -3324 
+     3314 
+    -3314 
+    22212 
+   -22212 
+    22112 
+   -22112 
+    32224 
+   -32224 
+    32214 
+   -32214 
+    32114 
+   -32114 
+    31114 
+   -31114 
+    23122 
+   -23122 
+    10225 
+     2222 
+    -2222 
+     2122 
+    -2122 
+     1212 
+    -1212 
+     1112 
+    -1112 
+  9010213 
+  9010113 
+ -9010213 
+    32212 
+   -32212 
+    32112 
+   -32112 
+    13222 
+   -13222 
+    13212 
+   -13212 
+    13112 
+   -13112 
+    30223 
+      227 
+    33122 
+   -33122 
+    13224 
+   -13224 
+    13214 
+   -13214 
+    13114 
+   -13114 
+    10215 
+    10115 
+   -10215 
+     3334 
+    -3334 
+     2216 
+    -2216 
+     2116 
+    -2116 
+   100333 
+    12216 
+   -12216 
+    12116 
+   -12116 
+      217 
+      117 
+     -217 
+    13124 
+   -13124 
+    13322 
+   -13322 
+    13312 
+   -13312 
+    22124 
+   -22124 
+    21214 
+   -21214 
+    12224 
+   -12224 
+    12214 
+   -12214 
+    12114 
+   -12114 
+    11114 
+   -11114 
+    42212 
+   -42212 
+    42112 
+   -42112 
+    10331 
+    30323 
+   -30323 
+    30313 
+   -30313 
+    30213 
+    30113 
+   -30213 
+    32124 
+   -32124 
+    31214 
+   -31214 
+    23222 
+   -23222 
+    23212 
+   -23212 
+    23112 
+   -23112 
+    10325 
+   -10325 
+    10315 
+   -10315 
+     3226 
+    -3226 
+     3216 
+    -3216 
+     3116 
+    -3116 
+      327 
+     -327 
+      317 
+     -317 
+    43122 
+   -43122 
+    53122 
+   -53122 
+  9010211 
+  9010111 
+ -9010211 
+    20325 
+   -20325 
+    20315 
+   -20315 
+     3126 
+    -3126 
+    13324 
+   -13324 
+    13314 
+   -13314 
+    13126 
+   -13126 
+      337 
+    23124 
+   -23124 
+     2226 
+    -2226 
+     2126 
+    -2126 
+     1216 
+    -1216 
+     1116 
+    -1116 
+    22222 
+   -22222 
+    22122 
+   -22122 
+    21212 
+   -21212 
+    21112 
+   -21112 
+    13226 
+   -13226 
+    13216 
+   -13216 
+    13116 
+   -13116 
+    22224 
+   -22224 
+    22214 
+   -22214 
+    22114 
+   -22114 
+    21114 
+   -21114 
+     2228 
+    -2228 
+     2218 
+    -2218 
+     2118 
+    -2118 
+     1118 
+    -1118 
+    23224 
+   -23224 
+    23214 
+   -23214 
+    23114 
+   -23114 
+  9050225 
+    23324 
+   -23324 
+    23314 
+   -23314 
+    12226 
+   -12226 
+    12126 
+   -12126 
+    11216 
+   -11216 
+    11116 
+   -11116 
+  9060225 
+    13334 
+   -13334 
diff --git a/EBE-Node/iS/EOS/chosen_particles_backup.dat b/EBE-Node/iS/EOS/chosen_particles_backup.dat
old mode 100644
new mode 100755
diff --git a/EBE-Node/iS/EOS/pdg-App.dat b/EBE-Node/iS/EOS/pdg-App.dat
old mode 100644
new mode 100755
diff --git a/EBE-Node/iS/EOS/pdg-full.dat b/EBE-Node/iS/EOS/pdg-full.dat
old mode 100644
new mode 100755
diff --git a/EBE-Node/iS/EOS/pdg.dat b/EBE-Node/iS/EOS/pdg.dat
old mode 100644
new mode 100755
diff --git a/EBE-Node/iS/EOS/pdg_decayPhotonCocktail.dat b/EBE-Node/iS/EOS/pdg_decayPhotonCocktail.dat
old mode 100644
new mode 100755
diff --git a/EBE-Node/iS/Table.cpp b/EBE-Node/iS/Table.cpp
index f22ca3f..9999ecb 100644
--- a/EBE-Node/iS/Table.cpp
+++ b/EBE-Node/iS/Table.cpp
@@ -256,6 +256,9 @@ double Table::interp(long colX, long colY, double xx, int mode)
     case 11:
       return interpNearestMono((*data)[colX-1], (*data)[colY-1], xx);
       break;
+    case 14:
+      return interpLinearDirect_extrap((*data)[colX-1], (*data)[colY-1], xx);
+      break;
     default:
       cout << "Table::interp error: mode parameter " << mode << " not recogonized." << endl;
       return 0.0;
diff --git a/EBE-Node/iS/arsenal.cpp b/EBE-Node/iS/arsenal.cpp
index a526a76..416d934 100644
--- a/EBE-Node/iS/arsenal.cpp
+++ b/EBE-Node/iS/arsenal.cpp
@@ -93,7 +93,36 @@ double interpCubicDirect(vector<double>* x, vector<double>* y, double x0)
 
 }
 
+//**********************************************************************
+double interpLinearDirect_extrap(vector<double>* x, vector<double>* y, double x0)
+// Returns the interpreted value of y=y(x) at x=x0 using linear interpolation method.
+// Enable linear extrapolation if x0 is out of boundary.
+// -- x,y: the independent and dependent double x0ables; x is assumed to be equal spaced and increasing
+// -- x0: where the interpolation should be performed
+{
+  long size = x->size();
+  if (size==1) {cout<<"interpLinearDirect warning: table size = 1"<<endl; return (*y)[0];}
+  double dx = (*x)[1]-(*x)[0]; // increment in x
+
+  // if close to left end:
+  if (abs(x0-(*x)[0])<dx*1e-30) return (*y)[0];
 
+  // find x's integer index
+  long idx = floor((x0-(*x)[0])/dx);
+  if (idx<0 || idx>=size-1)
+  {
+    // cout    << "interpLinearDirect: x0 out of bounds." << endl
+    //         << "x ranges from " << (*x)[0] << " to " << (*x)[size-1] << ", "
+    //         << "x0=" << x0 << ", " << "dx=" << dx << ", " << "idx=" << idx << endl;
+    if(idx<0)
+      return (*y)[0] + ((*y)[1]-(*y)[0])/dx*(x0-(*x)[0]);
+    else
+      return (*y)[size-1] + ((*y)[size-1]-(*y)[size-2])/dx*(x0-(*x)[size-1]);
+  }
+
+  return (*y)[idx] + ((*y)[idx+1]-(*y)[idx])/dx*(x0-(*x)[idx]);
+
+}
 
 
 //**********************************************************************
diff --git a/EBE-Node/iS/arsenal.h b/EBE-Node/iS/arsenal.h
index bc831a5..3cc00a7 100644
--- a/EBE-Node/iS/arsenal.h
+++ b/EBE-Node/iS/arsenal.h
@@ -19,7 +19,7 @@ double interpLinearDirect(vector<double>* x, vector<double>* y, double xx);
 double interpLinearMono(vector<double>* x, vector<double>* y, double xx);
 double interpNearestDirect(vector<double>* x, vector<double>* y, double xx);
 double interpNearestMono(vector<double>* x, vector<double>* y, double xx);
-
+double interpLinearDirect_extrap(vector<double>* x, vector<double>* y, double xx);
 double invertFunc(double (*func)(double), double y, double xL, double xR, double dx, double x0, double relative_accuracy=1e-10);
 
 double invertTableDirect_hook(double xx);
diff --git a/EBE-Node/iS/changelog.txt b/EBE-Node/iS/changelog.txt
index 280c0e1..5fbaa1a 100644
--- a/EBE-Node/iS/changelog.txt
+++ b/EBE-Node/iS/changelog.txt
@@ -8,6 +8,11 @@ Zhi Qiu & Chun Shen  --- 04/2013
 -- Use extractThermal/extractThermal3.sh to extract thermal results from v2data.dat and v2data-inte.dat (historical format).
 
 ------------------------------
+05-21-2013, Ver 1.2.1.12
+------------------------------
+.: In emissionfunction.cpp, the output for non-historical formats are changed from "results/thermal_%d_vn.dat" to "results/thermal_%d_vndata.dat".
+
+------------------------------
 10-01-2012, Ver 1.2.1.11
 ------------------------------
 .: The readindata.cpp and readindata.h files are updated (Chun).
diff --git a/EBE-Node/iS/emissionfunction.cpp b/EBE-Node/iS/emissionfunction.cpp
index 4ec83e1..53978fb 100644
--- a/EBE-Node/iS/emissionfunction.cpp
+++ b/EBE-Node/iS/emissionfunction.cpp
@@ -14,13 +14,13 @@
 #include "arsenal.h"
 
 #define AMOUNT_OF_OUTPUT 0 // smaller value means less outputs
-#define F0_IS_NOT_SMALL 0 // set to 0 to agree with Azspectra; set to 1 for reality
-#define USE_HISTORIC_FORMAT 1 // 0: use new way of outputting
+#define F0_IS_NOT_SMALL 1 // set to 0 to agree with Azspectra; set to 1 for reality
+#define USE_HISTORIC_FORMAT 0 // 0: use new way of outputting
 #define GROUPING_PARTICLES 1 // set to 1 to perform calculations for similar particles together
 #define PARTICLE_DIFF_TOLERANCE 0.01 // particles with mass and chemical potential (for each FZ-cell) difference less than this value will be considered to be identical (b/c Cooper-Frye)
 #define INCLUDE_DELTAF 1 // include delta f correction to particle distribution function in Cooper-Frye Formula
 #define INCLUDE_BULKDELTAF 1 // include delta f correction to particle distribution function in Cooper-Frye Formula
-#define CALCULATEDED3P false // calculate transverse energy distribution E*dE/d^3p from Cooper-Frye formula
+#define CALCULATEDED3P true // calculate transverse energy distribution E*dE/d^3p from Cooper-Frye formula
 
 using namespace std;
 
@@ -268,13 +268,23 @@ void EmissionFunctionArray::calculate_dN_ptdptdphidy(int particle_idx)
                   double deltaf = (1 - F0_IS_NOT_SMALL*sign*f0)*Wfactor*deltaf_prefactor;
                   double bulk_deltaf = -(1. - F0_IS_NOT_SMALL*sign*f0)*bulkPi*(bulkvisCoefficients[0]*mass*mass + bulkvisCoefficients[1]*pdotu + bulkvisCoefficients[2]*pdotu*pdotu);
                   double result;
-                  if(1 + deltaf + bulk_deltaf < 0.0) //set results to zero when delta f turns whole expression to negative
-                     result = 0.0;
-                  else
+                  //if(1 + deltaf + bulk_deltaf < 0.0) //set results to zero when delta f turns whole expression to negative
+                  //   result = 0.0;
+                  //else
                      result = prefactor*degen*f0*(1. + deltaf + bulk_deltaf)*pdsigma*tau;
 
                   dN_ptdptdphidy_tmp += result*delta_eta;
-                  if(CALCULATEDED3P) dE_ptdptdphidy_tmp += result*delta_eta*mT;
+                  //if(CALCULATEDED3P) dE_ptdptdphidy_tmp += result*delta_eta*mT;
+                  if(CALCULATEDED3P) 
+                  {
+                    // energy from ideal and shear viscous part
+                    double result_ideal_shear   = prefactor*degen*f0*(1+deltaf)*pdsigma*tau;      
+                    // get bulk part energy
+                    double deltasigma = tau*(da0*(1-gammaT*gammaT)-da1*gammaT*gammaT*vx-da2*gammaT*gammaT*vy);
+                    double pdeltap = mass*mass - pdotu*pdotu;
+                    double result_bulk  = 1.0/3.0*prefactor*degen*deltasigma*pdeltap*f0*bulk_deltaf;                   
+                    dE_ptdptdphidy_tmp += result_ideal_shear*delta_eta*pt + result_bulk*delta_eta;
+                  }                  
               } // k
           } // l
 
@@ -780,12 +790,26 @@ void EmissionFunctionArray::getbulkvisCoefficients(double Tdec, double* bulkvisC
    if(INCLUDE_BULKDELTAF)
    {
       double Tdec_fm = Tdec/hbarC;  // [1/fm]
+      
+      double Tdec_fm_table_min = bulkdf_coeff->get(1, 1);
+      long bulkdf_nrows = bulkdf_coeff->getNumberOfRows();
+      double Tdec_fm_table_max = bulkdf_coeff->get(1, bulkdf_nrows);
+      double Tdec_fm_table_step = bulkdf_coeff->get(1, 2)-bulkdf_coeff->get(1, 1);
 
       // load from file
-      bulkvisCoefficients[0] = bulkdf_coeff->interp(1, 2, Tdec_fm, 5)/pow(hbarC, 3);  //B0 [fm^3/GeV^3]
-      bulkvisCoefficients[1] = bulkdf_coeff->interp(1, 3, Tdec_fm, 5)/pow(hbarC, 2);  // D0 [fm^3/GeV^2]
-      bulkvisCoefficients[2] = bulkdf_coeff->interp(1, 4, Tdec_fm, 5)/pow(hbarC, 3);  // E0 [fm^3/GeV^3]
-      
+      if( (Tdec_fm < Tdec_fm_table_min-Tdec_fm_table_step*1e-30) || 
+            (Tdec_fm > Tdec_fm_table_max+Tdec_fm_table_step*1e-30)) //linear extraploate
+      {
+        bulkvisCoefficients[0] = bulkdf_coeff->interp(1, 2, Tdec_fm, 14)/pow(hbarC, 3);  //B0 [fm^3/GeV^3]
+        bulkvisCoefficients[1] = bulkdf_coeff->interp(1, 3, Tdec_fm, 14)/pow(hbarC, 2);  // D0 [fm^3/GeV^2]
+        bulkvisCoefficients[2] = bulkdf_coeff->interp(1, 4, Tdec_fm, 14)/pow(hbarC, 3);  // E0 [fm^3/GeV^3]
+      }
+      else
+      {
+        bulkvisCoefficients[0] = bulkdf_coeff->interp(1, 2, Tdec_fm, 5)/pow(hbarC, 3);  //B0 [fm^3/GeV^3]
+        bulkvisCoefficients[1] = bulkdf_coeff->interp(1, 3, Tdec_fm, 5)/pow(hbarC, 2);  // D0 [fm^3/GeV^2]
+        bulkvisCoefficients[2] = bulkdf_coeff->interp(1, 4, Tdec_fm, 5)/pow(hbarC, 3);  // E0 [fm^3/GeV^3]
+      }
       // parameterization for mu = 0
       //bulkvisCoefficients[0] = exp(-15.04512474*Tdec_fm + 11.76194266)/pow(hbarC, 3); //B0[fm^3/GeV^3]
       //bulkvisCoefficients[1] = exp( -12.45699277*Tdec_fm + 11.4949293)/hbarC/hbarC;  // D0 [fm^3/GeV^2]
diff --git a/EBE-Node/iS/iInteSp/iInteSp.cpp b/EBE-Node/iS/iInteSp/iInteSp.cpp
index 87a4a9f..0e8e729 100644
--- a/EBE-Node/iS/iInteSp/iInteSp.cpp
+++ b/EBE-Node/iS/iInteSp/iInteSp.cpp
@@ -23,7 +23,7 @@
 #include "arsenal.h"
 
 #define GAUSS_N 30 // used in the integrated vn calculation with pT cut
-
+#define CALCULATEPT true // if calculate total pt of all charged particles
 using namespace std;
 
 
@@ -31,7 +31,7 @@ Table pT_tab("tables/pT_gauss_table.dat");
 int pT_tab_length = pT_tab.getNumberOfRows();
 Table phi_tab("tables/phi_gauss_table.dat");
 int phi_tab_length = phi_tab.getNumberOfRows();
-Table eta_table("tables/particle_eta_table.dat");
+Table eta_table("tables/particle_eta_0_0.8_table.dat");
 int eta_table_length = eta_table.getNumberOfRows();
 
 
@@ -128,6 +128,7 @@ void calculate_flows(Table& dN_ptdptdphi, ostream& os_diff, ostream& os_inte, do
     //---------------------
     // initialization
     double normalizationi = 0;
+    double pt_normalizationi = 0;
     double vni[number_of_flows][2]; // integrated_flow numerators; 2: 0,1.real,imag
     for (int t=0; t<number_of_flows; t++) {vni[t][0]=0; vni[t][1]=0;}
 
@@ -139,7 +140,8 @@ void calculate_flows(Table& dN_ptdptdphi, ostream& os_diff, ostream& os_inte, do
             double pT = pT_tab.get(1,i+1), pT_weight = pT_tab.get(2,i+1);
 
             normalizationi += normalization[i]*pT*pT_weight;
-
+            if(CALCULATEPT)
+                pt_normalizationi += normalization[i]*pT*pT*pT_weight; //=pT*dNptdptdy
             for (int order=from_order; order<=to_order; order++)
             {
               vni[order-from_order][0] += vn[i][order-from_order][0]*pT*pT_weight;
@@ -184,7 +186,8 @@ void calculate_flows(Table& dN_ptdptdphi, ostream& os_diff, ostream& os_inte, do
 
             double normalization_pT = exp(pT_dN_vn_table.interp(1, 2, pT));
             normalizationi += normalization_pT*pT*pT_weight;
-
+            if(CALCULATEPT)
+                pt_normalizationi += normalization_pT*pT*pT*pT_weight;
             for (int order=from_order; order<=to_order; order++)
             {
                 double vn_pT_real = pT_dN_vn_table.interp(1, 2+(order-from_order)*2+1, pT);
@@ -209,7 +212,8 @@ void calculate_flows(Table& dN_ptdptdphi, ostream& os_diff, ostream& os_inte, do
     vn_inte.set(4, 1, 1);
     vn_inte.set(5, 1, 0);
     vn_inte.set(6, 1, 1);
-
+    if(CALCULATEPT)
+        vn_inte.set(3,1,pt_normalizationi); //overwrite the dummpy data in first row
     for (int t=0; t<number_of_flows; t++)
     {
     vn_inte.set(1, t+2, from_order+t);
@@ -405,100 +409,7 @@ int main()
     perform_eta_integration(&Xi_A_total_N, Xi_A_dN_dy, mass);
     calculate_and_output_spectra_and_vn(Xi_A_dN_dy, Xi_A_total_N, particle_name, mass);
 
-    //for decay photon cocktail
-
-    //for pion 0
-    double pion_zero_mass = 0.13498; mass = pion_zero_mass;
-    particle_name = "pion_0";
-    Table pion_zero_dN_dy("results/spec_111.dat");
-    Table pion_zero_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&pion_zero_total_N, pion_zero_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(pion_zero_dN_dy, pion_zero_total_N, particle_name, mass);
-    //for eta
-    double eta_mass = 0.54775; mass = eta_mass;
-    particle_name = "eta";
-    Table eta_dN_dy("results/spec_221.dat");
-    Table eta_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&eta_total_N, eta_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(eta_dN_dy, eta_total_N, particle_name, mass);
-    //for omega
-    double omega_mass = 0.78259; mass = omega_mass;
-    particle_name = "omega_782";
-    Table omega_dN_dy("results/spec_223.dat");
-    Table omega_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&omega_total_N, omega_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(omega_dN_dy, omega_total_N, particle_name, mass);
-    //for eta prime
-    double etaprime_mass = 0.95778; mass = etaprime_mass;
-    particle_name = "etaprime";
-    Table etaprime_dN_dy("results/spec_331.dat");
-    Table etaprime_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&etaprime_total_N, etaprime_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(etaprime_dN_dy, etaprime_total_N, particle_name, mass);
-    //for phi
-    double phi_mass = 1.01946; mass = phi_mass;
-    particle_name = "phi";
-    Table phi_dN_dy("results/spec_333.dat");
-    Table phi_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&phi_total_N, phi_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(phi_dN_dy, phi_total_N, particle_name, mass);
-    //for Sigma0
-    double Sigma0_mass = 1.19264; mass = Sigma0_mass;
-    particle_name = "Sigma_0";
-    Table Sigma0_dN_dy("results/spec_3212.dat");
-    Table Sigma0_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&Sigma0_total_N, Sigma0_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(Sigma0_dN_dy, Sigma0_total_N, particle_name, mass);
-
-    //direct photons (short lived resonances)
-    double gamma_mass = 0.0; mass = gamma_mass;
-    particle_name = "direct_gamma_shortdecay";
-    Table gamma_direct_dN_dy("results/spec_22.dat");
-    Table gamma_direct_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&gamma_direct_total_N, gamma_direct_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(gamma_direct_dN_dy, gamma_direct_total_N, particle_name, mass);
-    //pi^0 decay photons
-    mass = gamma_mass;
-    particle_name = "decay_gamma_pi0";
-    Table gamma_pi0_dN_dy("results/spec_21.dat");
-    Table gamma_pi0_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&gamma_pi0_total_N, gamma_pi0_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(gamma_pi0_dN_dy, gamma_pi0_total_N, particle_name, mass);
-    //eta decay photons
-    mass = gamma_mass;
-    particle_name = "decay_gamma_eta";
-    Table gamma_eta_dN_dy("results/spec_20.dat");
-    Table gamma_eta_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&gamma_eta_total_N, gamma_eta_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(gamma_eta_dN_dy, gamma_eta_total_N, particle_name, mass);
-    //omega decay photons
-    mass = gamma_mass;
-    particle_name = "decay_gamma_omega";
-    Table gamma_omega_dN_dy("results/spec_19.dat");
-    Table gamma_omega_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&gamma_omega_total_N, gamma_omega_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(gamma_omega_dN_dy, gamma_omega_total_N, particle_name, mass);
-    //eta prime decay photons
-    mass = gamma_mass;
-    particle_name = "decay_gamma_etaprime";
-    Table gamma_etaprime_dN_dy("results/spec_18.dat");
-    Table gamma_etaprime_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&gamma_etaprime_total_N, gamma_etaprime_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(gamma_etaprime_dN_dy, gamma_etaprime_total_N, particle_name, mass);
-    //phi decay photons
-    mass = gamma_mass;
-    particle_name = "decay_gamma_phi";
-    Table gamma_phi_dN_dy("results/spec_17.dat");
-    Table gamma_phi_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&gamma_phi_total_N, gamma_phi_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(gamma_phi_dN_dy, gamma_phi_total_N, particle_name, mass);
-    //Sigma0 decay photons
-    mass = gamma_mass;
-    particle_name = "decay_gamma_Sigma0";
-    Table gamma_Sigma0_dN_dy("results/spec_16.dat");
-    Table gamma_Sigma0_total_N(pT_tab_length, phi_tab_length);
-    perform_eta_integration(&gamma_Sigma0_total_N, gamma_Sigma0_dN_dy, mass);
-    calculate_and_output_spectra_and_vn(gamma_Sigma0_dN_dy, gamma_Sigma0_total_N, particle_name, mass);
+
 
     //----------------------------------
     // Next, for all charged particles
@@ -536,5 +447,8 @@ int main()
     calculate_and_output_spectra_and_vn(dN_dy, total_N, "Charged_ptcut03", 0, 9, 0.3, 3.6, 6);
     calculate_and_output_spectra_and_vn(dN_dy, total_N, "Charged_ptcut03_3", 0, 9, 0.3, 3.0, 6);
 
+    calculate_and_output_spectra_and_vn(dN_dy, total_N, "Charged_ptcut015_10", 0, 9, 0.15, 10, 6);
+    calculate_and_output_spectra_and_vn(dN_dy, total_N, "Charged_ptcut02_5", 0, 9, 0.2, 5, 6);
+    calculate_and_output_spectra_and_vn(dN_dy, total_N, "Charged_ptcut0510", 0, 9, 0.5, 10, 6);
 }
 
diff --git a/EBE-Node/iS/main.cpp b/EBE-Node/iS/main.cpp
index 73d602b..815c0a2 100644
--- a/EBE-Node/iS/main.cpp
+++ b/EBE-Node/iS/main.cpp
@@ -87,7 +87,7 @@ int main()
       cout << " -- EOS is chemical equilibrium. " << endl;
       for(int i=0; i<Nparticle; i++)
         for(int j=0; j<FO_length; j++)
-           FOsurf_ptr[j].particle_mu[i] = 0.0e0;
+           FOsurf_ptr[i].particle_mu[j] = 0.0e0;
    }
    cout << endl << " -- Read in data finished!" << endl << endl;
 
diff --git a/EBE-Node/iS/readindata.cpp b/EBE-Node/iS/readindata.cpp
index ed98ee6..4749590 100644
--- a/EBE-Node/iS/readindata.cpp
+++ b/EBE-Node/iS/readindata.cpp
@@ -109,7 +109,7 @@ int read_resonance(particle_info* particle)
    double eps = 1e-15;
    int Nparticle=0;
    cout << " -- Read in particle resonance decay table...";
-   ifstream resofile("EOS/pdg.dat");
+   ifstream resofile("EOS/pdg-full.dat");
    int local_i = 0;
    int dummy_int;
    while (!resofile.eof())
diff --git a/EBE-Node/iS/reso.inp b/EBE-Node/iS/reso.inp
index 758e08c..267ca19 100644
--- a/EBE-Node/iS/reso.inp
+++ b/EBE-Node/iS/reso.inp
@@ -1,3 +1,5 @@
 results/dN_ptdptdphidy.dat    **spectra-file
 results	                   **output
- 15                       **Monte-Carlo-number-of-lightest-particleto-calculate 
+ 211                       **Monte-Carlo-number-of-lightest-particleto-calculate 
+EOS/numbers.dat        **output-file_from_spectra.f
+
diff --git a/EBE-Node/iS/tables/pT_gauss_table.dat b/EBE-Node/iS/tables/pT_gauss_table.dat
index d5d98fa..41afe09 100644
--- a/EBE-Node/iS/tables/pT_gauss_table.dat
+++ b/EBE-Node/iS/tables/pT_gauss_table.dat
@@ -1,15 +1,30 @@
-   7.1775243e-03   1.8429090e-02
-   3.7899363e-02   4.3084681e-02
-   9.3507336e-02   6.8231404e-02
-   1.7461150e-01   9.4128031e-02
-   2.8212483e-01   1.2111144e-01
-   4.1733360e-01   1.4959631e-01
-   5.8199354e-01   1.8011553e-01
-   7.7847914e-01   2.1338784e-01
-   1.0100217e+00   2.5043411e-01
-   1.2811083e+00   2.9279320e-01
-   1.5981907e+00   3.4295984e-01
-   1.9710687e+00   4.0538597e-01
-   2.4159630e+00   4.8919718e-01
-   2.9638986e+00   6.1782984e-01
-   3.6943142e+00   8.8675169e-01
+        0.00474072    1.21677895e-02
+        0.02499239    2.83556883e-02
+        0.06148335    4.46432427e-02
+        0.11431958    6.10532130e-02
+        0.18364546    7.76303479e-02
+        0.26965219    9.44233289e-02
+        0.37258145    1.11484470e-01
+        0.49272938    1.28870543e-01
+        0.63045156    1.46643914e-01
+        0.78616933    1.64873950e-01
+        0.96037760    1.83638768e-01
+        1.15365466    2.03027425e-01
+        1.36667447    2.23142718e-01
+        1.60022212    2.44104811e-01
+        1.85521348    2.66056024e-01
+        2.13272043    2.89167264e-01
+        2.43400358    3.13646833e-01
+        2.76055548    3.39752760e-01
+        3.11415867    3.67810473e-01
+        3.49696520    3.98238862e-01
+        3.91160849    4.31589924e-01
+        4.36136529    4.68611401e-01
+        4.85039862    5.10350265e-01
+        5.38413854    5.58333298e-01
+        5.96991219    6.14904441e-01
+        6.61806178    6.83913055e-01
+        7.34412386    7.72294788e-01
+        8.17368105    8.94374247e-01
+        9.15564665    1.08718729e+00
+       10.41575244    1.50261116e+00
diff --git a/EBE-Node/iS/tables/particle_eta_table.dat b/EBE-Node/iS/tables/particle_eta_table.dat
index 70d6918..a31f769 100644
--- a/EBE-Node/iS/tables/particle_eta_table.dat
+++ b/EBE-Node/iS/tables/particle_eta_table.dat
@@ -1,20 +1,40 @@
-   1.2500000e-02   5.0000000e-02
-   3.7500000e-02   5.0000000e-02
-   6.2500000e-02   5.0000000e-02
-   8.7500000e-02   5.0000000e-02
-   1.1250000e-01   5.0000000e-02
-   1.3750000e-01   5.0000000e-02
-   1.6250000e-01   5.0000000e-02
-   1.8750000e-01   5.0000000e-02
-   2.1250000e-01   5.0000000e-02
-   2.3750000e-01   5.0000000e-02
-   2.6250000e-01   5.0000000e-02
-   2.8750000e-01   5.0000000e-02
-   3.1250000e-01   5.0000000e-02
-   3.3750000e-01   5.0000000e-02
-   3.6250000e-01   5.0000000e-02
-   3.8750000e-01   5.0000000e-02
-   4.1250000e-01   5.0000000e-02
-   4.3750000e-01   5.0000000e-02
-   4.6250000e-01   5.0000000e-02
-   4.8750000e-01   5.0000000e-02
+        0.00220286    1.13031927e-02
+        0.01159220    2.62457113e-02
+        0.02842506    4.10526460e-02
+        0.05260398    5.56146230e-02
+        0.08398399    6.98425175e-02
+        0.12237649    8.36504882e-02
+        0.16755062    9.69554199e-02
+        0.21923471    1.09677270e-01
+        0.27711794    1.21739519e-01
+        0.34085218    1.33069617e-01
+        0.41005414    1.43599423e-01
+        0.48430764    1.53265606e-01
+        0.56316609    1.62010034e-01
+        0.64615525    1.69780115e-01
+        0.73277599    1.76529118e-01
+        0.82250739    1.82216456e-01
+        0.91480977    1.86807923e-01
+        1.00912802    1.90275905e-01
+        1.10489491    1.92599545e-01
+        1.20153448    1.93764870e-01
+        1.29846552    1.93764870e-01
+        1.39510509    1.92599545e-01
+        1.49087198    1.90275905e-01
+        1.58519023    1.86807923e-01
+        1.67749261    1.82216456e-01
+        1.76722401    1.76529118e-01
+        1.85384475    1.69780115e-01
+        1.93683391    1.62010034e-01
+        2.01569236    1.53265606e-01
+        2.08994586    1.43599423e-01
+        2.15914782    1.33069617e-01
+        2.22288206    1.21739519e-01
+        2.28076529    1.09677270e-01
+        2.33244938    9.69554199e-02
+        2.37762351    8.36504882e-02
+        2.41601601    6.98425175e-02
+        2.44739602    5.56146230e-02
+        2.47157494    4.10526460e-02
+        2.48840780    2.62457113e-02
+        2.49779714    1.13031927e-02
